use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Str;
use Tests\TestCase;
use App\Models\Post;

class PostTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    /**
     * Test creating a post.
     */
    public function test_can_create_post()
    {
        $postData = [
            'title' => $this->faker->sentence,
            'content' => $this->faker->paragraph,
            'slug' => Str::slug($this->faker->sentence),
        ];

        $response = $this->post(route('posts.store'), $postData);

        $response->assertStatus(201); // Check if the post was created successfully

        $this->assertDatabaseHas('posts', $postData); // Check if the post data exists in the database
    }

    /**
     * Test reading a post.
     */
    public function test_can_read_post()
    {
        $post = Post::factory()->create();

        $response = $this->get(route('posts.show', ['post' => $post->slug]));

        $response->assertStatus(200); // Check if the post page is accessible
        $response->assertSee($post->title); // Check if the post title is displayed on the page
    }

    /**
     * Test updating a post.
     */
    public function test_can_update_post()
    {
        $post = Post::factory()->create();
        $updatedData = [
            'title' => $this->faker->sentence,
            'content' => $this->faker->paragraph,
            'slug' => Str::slug($this->faker->sentence),
        ];

        $response = $this->put(route('posts.update', ['post' => $post->slug]), $updatedData);

        $response->assertStatus(200); // Check if the post was updated successfully

        $this->assertDatabaseHas('posts', $updatedData); // Check if the updated data exists in the database
        $this->assertDatabaseMissing('posts', $post->toArray()); // Check if the old data is removed from the database
    }

    /**
     * Test deleting a post.
     */
    public function test_can_delete_post()
    {
        $post = Post::factory()->create();

        $response = $this->delete(route('posts.destroy', ['post' => $post->slug]));

        $response->assertStatus(302); // Check if the deletion was successful (redirect status)

        $this->assertDatabaseMissing('posts', $post->toArray()); // Check if the post is no longer in the database
    }
}
